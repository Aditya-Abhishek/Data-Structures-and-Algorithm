Given a string S, remove consecutive duplicates from it recursively.
Input Format :
String S
Output Format :
Output string
Constraints :
1 <= |S| <= 10^3
where |S| represents the length of string
Sample Input 1 :
aabccba
Sample Output 1 :
abcba
Sample Input 2 :
xxxyyyzwwzzz
Sample Output 2 :
xyzwz


Solution:
#include<cstring>
void removeConsecutiveDuplicates(char *input) {
	/* Don't write main().
	* Don't read input, it is passed as function argument.    
	* Change in the given string itself.
	* No need to return or print anything
	* Taking input and printing output is handled automatically.
	*/  
    
    if(input[0]=='\0'){
  return;
}
    
  int n=strlen(input); 
if(input[0]==input[1])
{
     for(int i=1;i<=n;i++){
        input[i-1]=input[i];
    }
   removeConsecutiveDuplicates(input);   //THIS RECURSIVE FUNCTION IS BEING CALLED BECAUSE THE LENGTH OF OUR IMPUT FILE HAS BEEN REDUCED HERE ALREADY
                                                THATS WHY THERE IS NO (input +1).//
    }
    
      removeConsecutiveDuplicates(input+1);
 
}


// We are calling the recursive function twice here.
